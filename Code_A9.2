import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import datasets
boston = datasets.load_boston()
features = pd.DataFrame(boston.data, columns=boston.feature_names)
targets = boston.target
'''
# The boston variable itself is a dictionary, so we can check for its keys 
print(boston.keys())
print(boston.feature_names)
print(boston.DESCR)
'''
# Now let’s convert it into pandas!
bos = pd.DataFrame(boston.data)
#print(bos.head())

# Let’s convert the index to the column names.
bos.columns = boston.feature_names

# Check the shape of boston and target DS
#print(bos.shape, boston.target.shape)

# As we can see both shapes are same, Append both
bos['PRICE'] = boston.target

# Check if there are NaN in DS
print(bos.isnull().sum())

# Defining x and Y
x = bos.drop('PRICE', axis=1)
Y = bos['PRICE']

# Spliiting to train and test DS
x_train, x_test, y_train, y_test = train_test_split(x,Y,test_size = 0.2)

#model for decision tree
#from sklearn.tree import DecisionTreeClassifier
#classifier = DecisionTreeClassifier(criterion='entropy',random_state=0)
from sklearn.ensemble import RandomForestRegressor
regressor = RandomForestRegressor(n_estimators=60)
regressor.fit(x_train,y_train)
print('RandomForestRegressor score is {:.6}'.format(regressor.score(x_test,y_test)*100))

from sklearn.metrics import explained_variance_score
scr = explained_variance_score(y_test,y_pred=regressor.predict(x_test))

print('RandomForestRegressor score using explained_variance_score is {:.6}'.format(scr*100))
